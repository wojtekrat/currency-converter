{"version":3,"sources":["CurrencyRow.js","bg.jpg","App.js","index.js"],"names":["StyledRow","styled","div","CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","value","onChange","map","option","StyledApp","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","style","fontSize","ReactDOM","render","document","getElementById"],"mappings":"2LAGMA,EAAYC,IAAOC,IAAV,gMAcA,SAASC,EAAYC,GAChC,IACIC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEJ,OACI,eAACT,EAAD,WACI,uBAAOU,KAAK,SAASC,MAAOF,EAAQG,SAAUJ,IAC9C,wBAAQG,MAAOL,EAAkBM,SAAUL,EAA3C,SACKF,EAAgBQ,KAAI,SAAAC,GAAM,OACvB,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,W,MC9BlB,I,MCMTC,EAAYd,IAAOC,IAAV,4UAqFAc,MA/Df,WACE,IAOIC,EAAUC,EAPd,EAA8CC,mBAAS,IAAvD,mBAAOd,EAAP,KAAwBe,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOV,EAAP,KAAekB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAkCA,OA/BID,GACFV,EAAaT,EACbQ,EAAWR,EAASgB,IAEpBR,EAAWR,EACXS,EAAaT,EAASgB,GAGxBK,qBAAU,WACRC,MArBa,qFAsBVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAG9B,IAaD,eAACrB,EAAD,WACE,kDACA,cAACZ,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBe,EAClBd,iBAAkB,SAAAkC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAO/B,QAChDH,eAjBJ,SAAgCiC,GAC9Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,IAgBtBpB,OAAQS,IAGR,qBAAKyB,MAAO,CAACC,SAAU,QAAvB,eACA,cAACzC,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAkC,GAAC,OAAIjB,EAAciB,EAAEC,OAAO/B,QAC9CH,eArBJ,SAA8BiC,GAC5Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,IAoBtBpB,OAAQQ,QCjFd4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.78342a0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRow = styled.div`\r\ninput[type=number] {\r\n    outline: none;\r\n    padding: 10px;\r\n    width: 120px;\r\n    margin-right: 10px;\r\n}\r\n\r\nselect {\r\n    padding: 10px;\r\n    outline: none;\r\n}\r\n`\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount\r\n    } = props\r\n    return (\r\n        <StyledRow>\r\n            <input type=\"number\" value={amount} onChange={onChangeAmount}/>\r\n            <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n                \r\n            </select>\r\n        </StyledRow>\r\n    )\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/bg.2c73f25c.jpg\";","import React, {useEffect, useState} from 'react';\nimport CurrencyRow from './CurrencyRow';\nimport './index.css'\nimport styled from 'styled-components'\nimport bg from './bg.jpg'\n\nconst StyledApp = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nmin-height: 100vh;  \nbackground: rgb(102,0,79);\nbackground: radial-gradient(circle, rgba(102,0,79,1) 0%, rgba(0,0,0,1) 100%);\ncolor: white;\n\nh1 {\n  margin: 0;\n  margin-bottom: .5rem;\n  color: white;\n}\n\n\n`\nconst access_key = \"04fc575ba8cb3707569c08555d962936\"\nconst BASE_URL = \"http://api.exchangeratesapi.io/latest?access_key=\"+access_key\n\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates) ])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n\n  }, [])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <StyledApp>\n      <h1>Convert currency</h1>\n      <CurrencyRow\n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChangeCurrency={e => setFromCurrency(e.target.value)}\n      onChangeAmount={handleFromAmountChange}\n      amount={fromAmount}\n      />\n      \n      <div style={{fontSize: '3rem'}}>=</div>\n      <CurrencyRow\n      currencyOptions={currencyOptions}\n      selectedCurrency={toCurrency}\n      onChangeCurrency={e => setToCurrency(e.target.value)}\n      onChangeAmount={handleToAmountChange}\n      amount={toAmount}\n      />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}